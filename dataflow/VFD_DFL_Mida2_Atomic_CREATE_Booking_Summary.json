{
	"name": "VFD_DFL_Mida2_Atomic_CREATE_Booking_Summary",
	"properties": {
		"folder": {
			"name": "Mida2/Bookings/Atomic"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "VFD_Big_Data_DL",
						"type": "LinkedServiceReference"
					},
					"name": "DummySource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "VFD_DS_Curated_Mida_Bookings_Summary_Parquet",
						"type": "DatasetReference"
					},
					"name": "SinkSummary"
				}
			],
			"transformations": [
				{
					"name": "CreateSummaryRecord"
				},
				{
					"name": "SelectSummaryFields"
				}
			],
			"scriptLines": [
				"parameters{",
				"     row_id as string,",
				"     reservation_code as string,",
				"     priceList as string,",
				"     channel_label as string,",
				"     pax_quantity as integer,",
				"     insertTimestamp as timestamp,",
				"     updateTimestamp as timestamp,",
				"     reservation_amount as decimal(10,2),",
				"     visitDate as date",
				"}",
				"source(output(",
				"          dummy as integer",
				"     ),",
				"     useSchema: false,",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     fileSystem: 'dummy',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true,",
				"     data: 'dummy\\n1') ~> DummySource",
				"DummySource derive(row_id = $row_id,",
				"          reservation_code = $reservation_code,",
				"          priceList = $priceList,",
				"          channel_label = $channel_label,",
				"          pax_quantity = $pax_quantity,",
				"          insertTimestamp = $insertTimestamp,",
				"          updateTimestamp = $updateTimestamp,",
				"          reservation_amount = $reservation_amount,",
				"          visitDate = $visitDate) ~> CreateSummaryRecord",
				"CreateSummaryRecord select(mapColumn(",
				"          row_id,",
				"          reservation_code,",
				"          priceList,",
				"          channel_label,",
				"          pax_quantity,",
				"          insertTimestamp,",
				"          updateTimestamp,",
				"          reservation_amount,",
				"          visitDate",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectSummaryFields",
				"SelectSummaryFields sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          reservation_code as string,",
				"          priceList as string,",
				"          channel_label as string,",
				"          pax_quantity as integer,",
				"          insertTimestamp as date,",
				"          updateTimestamp as date,",
				"          reservation_amount as decimal(10,2),",
				"          visitDate as date",
				"     ),",
				"     format: 'parquet',",
				"     partitionFileNames:['booking_summary.parquet'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> SinkSummary"
			]
		}
	}
}