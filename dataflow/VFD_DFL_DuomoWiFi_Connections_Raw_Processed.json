{
	"name": "VFD_DFL_DuomoWiFi_Connections_Raw_Processed",
	"properties": {
		"description": "Trasforma connessioni da JSON Raw a Parquet Processed con calcoli e conversioni",
		"folder": {
			"name": "WiFi"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "VFD_DS_Raw_DuomoWiFi_Connections_JSON",
						"type": "DatasetReference"
					},
					"name": "SourceConnectionsJSON"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "VFD_DS_Processed_DuomoWiFi_Connections_Parquet",
						"type": "DatasetReference"
					},
					"name": "SinkConnectionsParquet"
				}
			],
			"transformations": [
				{
					"name": "FlattenData"
				},
				{
					"name": "DerivedColumns"
				},
				{
					"name": "DataTypeConversions"
				}
			],
			"scriptLines": [
				"source(output(",
				"          generated as string,",
				"          sId as string,",
				"          count as integer,",
				"          connections as (customerId as string, username as string, organizationId as string, start as string, startBusiness as string, stop as string, stopBusiness as string, duration as integer, traffic as integer, locationName as string, locationId as string, hotspotIdentifier as string, hotspotId as string, latitude as double, longitude as double, macAddressClient as string, ipAddressClient as string, terminateCause as string)[]",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine') ~> SourceConnectionsJSON",
				"SourceConnectionsJSON foldDown(unroll(connections),",
				"     mapColumn(",
				"          hotspotIdentifier = connections.hotspotIdentifier,",
				"          start = connections.start,",
				"          stop = connections.stop,",
				"          duration = connections.duration,",
				"          traffic = connections.traffic,",
				"          terminateCause = connections.terminateCause,",
				"          username = connections.username,",
				"          macAddressClient = connections.macAddressClient,",
				"          ipAddressClient = connections.ipAddressClient,",
				"          locationId = connections.locationId,",
				"          customerId = connections.customerId",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> FlattenData",
				"FlattenData derive(sessionTime_minutes = duration / 60,",
				"          traffic_MB = traffic / (1024 * 1024),",
				"          processing_date = currentUTC(),",
				"          data_source = 'cloud4wi_connections') ~> DerivedColumns",
				"DerivedColumns derive(start_converted = toTimestamp(start, 'yyyy-MM-dd\\'T\\'HH:mm:ss\\'Z\\''),",
				"          stop_converted = toTimestamp(stop, 'yyyy-MM-dd\\'T\\'HH:mm:ss\\'Z\\'')) ~> DataTypeConversions",
				"DataTypeConversions sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          hotspotIdentifier as string,",
				"          start as string,",
				"          stop as string,",
				"          duration as integer,",
				"          traffic as integer,",
				"          terminateCause as string,",
				"          username as string,",
				"          macAddressClient as string,",
				"          ipAddressClient as string,",
				"          locationId as string,",
				"          customerId as string,",
				"          sessionTime_minutes as double,",
				"          traffic_MB as double,",
				"          processing_date as any,",
				"          data_source as string,",
				"          start_converted as any,",
				"          stop_converted as any",
				"     ),",
				"     format: 'parquet',",
				"     partitionFileNames:['VFD_DFL_DuomoWiFi_Connections_Raw_Processed_output.parquet'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     partitionBy('hash', 1),",
				"     compressionCodec: 'snappy') ~> SinkConnectionsParquet"
			]
		}
	}
}