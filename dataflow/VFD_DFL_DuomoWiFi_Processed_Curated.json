{
	"name": "VFD_DFL_DuomoWiFi_Processed_Curated",
	"properties": {
		"description": "Esegue left join tra connessioni e utenti per creare dataset arricchito",
		"folder": {
			"name": "WiFi"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "VFD_DS_Processed_DuomoWiFi_Connections_Parquet",
						"type": "DatasetReference"
					},
					"name": "SourceConnections"
				},
				{
					"dataset": {
						"referenceName": "VFD_DS_Processed_DuomoWiFi_Users_Parquet",
						"type": "DatasetReference"
					},
					"name": "SourceUsers"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "VFD_DS_Curated_DuomoWiFi_Enriched_Parquet",
						"type": "DatasetReference"
					},
					"name": "SinkEnrichedData"
				}
			],
			"transformations": [
				{
					"name": "LeftJoinConnectionsUsers"
				},
				{
					"name": "SelectAndRenameColumns"
				}
			],
			"scriptLines": [
				"source(output(",
				"          hotspotIdentifier as string,",
				"          start as string,",
				"          stop as string,",
				"          duration as integer,",
				"          traffic as integer,",
				"          terminateCause as string,",
				"          username as string,",
				"          macAddressClient as string,",
				"          ipAddressClient as string,",
				"          locationId as string,",
				"          customerId as string,",
				"          sessionTime_minutes as double,",
				"          traffic_MB as double,",
				"          processing_date as timestamp,",
				"          data_source as string,",
				"          start_converted as timestamp,",
				"          stop_converted as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> SourceConnections",
				"source(output(",
				"          cid as string,",
				"          username as string,",
				"          firstName as string,",
				"          lastName as string,",
				"          email as string,",
				"          gender as string,",
				"          phone as string,",
				"          birthDate as string,",
				"          country as string,",
				"          zipCode as string,",
				"          wifiArea as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> SourceUsers",
				"SourceConnections, SourceUsers join(SourceConnections@username == SourceUsers@username,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> LeftJoinConnectionsUsers",
				"LeftJoinConnectionsUsers select(mapColumn(",
				"          hotspotIdentifier,",
				"          start,",
				"          stop,",
				"          duration,",
				"          traffic,",
				"          terminateCause,",
				"          username = SourceConnections@username,",
				"          macAddressClient,",
				"          ipAddressClient,",
				"          locationId,",
				"          customerId,",
				"          sessionTime_minutes,",
				"          traffic_MB,",
				"          user_cid = cid,",
				"          user_firstName = firstName,",
				"          user_lastName = lastName,",
				"          user_email = email,",
				"          user_gender = gender,",
				"          user_phone = phone,",
				"          user_birthDate = birthDate,",
				"          user_country = country,",
				"          user_zipCode = zipCode,",
				"          user_wifiArea = wifiArea",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectAndRenameColumns",
				"SelectAndRenameColumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          hotspotIdentifier as string,",
				"          start as string,",
				"          stop as string,",
				"          duration as integer,",
				"          traffic as integer,",
				"          terminateCause as string,",
				"          username as string,",
				"          macAddressClient as string,",
				"          ipAddressClient as string,",
				"          locationId as string,",
				"          customerId as string,",
				"          sessionTime_minutes as double,",
				"          traffic_MB as double,",
				"          processing_date as any,",
				"          data_source as string,",
				"          start_converted as any,",
				"          stop_converted as any,",
				"          user_firstName as string,",
				"          user_lastName as string,",
				"          user_email as string,",
				"          user_gender as string,",
				"          user_phone as string,",
				"          user_birthDate as string,",
				"          user_country as string,",
				"          user_zipCode as string,",
				"          user_wifiArea as string",
				"     ),",
				"     format: 'parquet',",
				"     partitionFileNames:['VFD_DFL_DuomoWiFi_Processed_Curated_output.parquet'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     partitionBy('hash', 1),",
				"     compressionCodec: 'snappy') ~> SinkEnrichedData"
			]
		}
	}
}