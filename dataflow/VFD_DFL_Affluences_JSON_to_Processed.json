{
	"name": "VFD_DFL_Affluences_JSON_to_Processed",
	"properties": {
		"folder": {
			"name": "Affluences"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "VFD_DS_Raw_Affluences_JSON",
						"type": "DatasetReference"
					},
					"name": "SourceJSON"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "VFD_DS_Processed_Affluences_Parquet",
						"type": "DatasetReference"
					},
					"name": "SinkProcessed"
				}
			],
			"transformations": [
				{
					"name": "FlattenJSON"
				},
				{
					"name": "ExpandEntries"
				},
				{
					"name": "AddSiteName"
				},
				{
					"name": "ConvertTypes"
				}
			],
			"scriptLines": [
				"parameters{",
				"     year as string,",
				"     month as string,",
				"     dateFormatted as string",
				"}",
				"source(output(",
				"          data as (results as (day as string, entries as (hour as string, occupancy as integer, entries as integer, exits as integer)[])[], site_id as string)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine',",
				"     wildcardPaths:[(concat(\"/Affluences/\",$year,\"/\",$month,\"/VFD_Affluences_\",$dateFormatted,\"_*.json\"))]) ~> SourceJSON",
				"SourceJSON foldDown(unroll(data.results, data.results),",
				"     mapColumn(",
				"          day = data.results.day,",
				"          entries = data.results.entries,",
				"          site_uuid = data.site_id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> FlattenJSON",
				"FlattenJSON foldDown(unroll(entries, entries),",
				"     mapColumn(",
				"          site_uuid,",
				"          day,",
				"          hour = entries.hour,",
				"          occupancy = entries.occupancy,",
				"          entries_count = entries.entries,",
				"          exits_count = entries.exits",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> ExpandEntries",
				"ExpandEntries derive(site_name = case(",
				"     site_uuid == '5a2757bc-e1c6-4d5e-9db3-edfc4e9c9307', 'Terrazze',",
				"     site_uuid == 'ca2dae61-4a99-4cb7-8051-26cb852ea408', 'Ascensore Nord',",
				"     site_uuid == 'aa6c22f1-84b6-441a-bbb0-bd429e63536d', 'Ascensore Sud',",
				"     site_uuid == '8358df5f-0186-4a11-87ad-11fc19cda749', 'Salita a piedi',",
				"     site_uuid == '639bc326-010a-402f-ba5f-3c75e2740d9d', 'Discesa a piedi',",
				"     'Unknown'",
				")) ~> AddSiteName",
				"AddSiteName derive(date = toDate(day, 'yyyy-MM-dd'),",
				"          site_id = site_uuid) ~> ConvertTypes",
				"ConvertTypes sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          site_id as string,",
				"          site_name as string,",
				"          date as date,",
				"          hour as string,",
				"          occupancy as integer,",
				"          entries as integer,",
				"          exits as integer",
				"     ),",
				"     format: 'parquet',",
				"     partitionFileNames:['VFD_DFL_Affluences_JSON_to_Processed_output.parquet'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          site_id,",
				"          site_name,",
				"          date,",
				"          hour,",
				"          occupancy,",
				"          entries = entries_count,",
				"          exits = exits_count",
				"     ),",
				"     partitionBy('hash', 1),",
				"     folderPath: concat(\"Affluences/\", $year, \"/\", $month),",
				"     compressionCodec: 'snappy') ~> SinkProcessed"
			]
		}
	}
}