{
	"name": "VFD_DFL_Mida_Sales_Raw_Processed",
	"properties": {
		"description": "Dataflow with full schema from CSV to Parquet with dynamic file name.",
		"folder": {
			"name": "Mida/Sales"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "VFD_DS_Raw_Mida_Sales_CSV",
						"type": "DatasetReference"
					},
					"name": "SourceCSV"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "VFD_DS_Processed_Mida_Sales_Parquet",
						"type": "DatasetReference"
					},
					"name": "SinkParquet"
				}
			],
			"transformations": [
				{
					"name": "SelectFields"
				}
			],
			"scriptLines": [
				"parameters{",
				"     folderPath as string (\"folder\"),",
				"     sourcefileName as string (\"source\"),",
				"     destfileName as string (\"dest\")",
				"}",
				"source(output(",
				"          guid_pk as string,",
				"          reservation_progressiveCode as string,",
				"          reservation_code as string,",
				"          reservation_status as integer,",
				"          invoiceRequired as string,",
				"          customer as decimal(10,2),",
				"          visitDate as string,",
				"          reservationPayment_guid as string,",
				"          parentPayment_guid as string,",
				"          sliced as string,",
				"          reservation_guid as string,",
				"          group_guid as string,",
				"          group_label as string,",
				"          group_email as string,",
				"          paymentCode as string,",
				"          paymentCondition as decimal(10,2),",
				"          reservation_amount as decimal(10,2),",
				"          reservation_amountTax as decimal(10,2),",
				"          status as integer,",
				"          status_text as string,",
				"          stamp as string,",
				"          notes as decimal(10,2),",
				"          transactionType as string,",
				"          transactionType_text as string,",
				"          paymentLimitDate as decimal(10,2),",
				"          paymentDate as string,",
				"          refund as string,",
				"          refunded as string,",
				"          convention_label as string,",
				"          receiptCode as decimal(10,2),",
				"          insertTimestamp as string,",
				"          updateTimestamp as string,",
				"          owner as string,",
				"          owner_text as string,",
				"          sessionId as string,",
				"          terminal_label as decimal(10,2),",
				"          terminalGroup_label as decimal(10,2),",
				"          gateway_guid as string,",
				"          gateway_label as string,",
				"          transactionID as string,",
				"          bankAccount_guid as decimal(10,2),",
				"          bankAccount_label as decimal(10,2),",
				"          channel_guid as string,",
				"          channel_label as string,",
				"          channelType as string,",
				"          detail_guid as string,",
				"          extra_guid as decimal(10,2),",
				"          priceList as string,",
				"          event as string,",
				"          detailType as string,",
				"          detail_text as string,",
				"          detail_label as string,",
				"          detail_count as integer,",
				"          paymentDetail_guid as string,",
				"          detail_payingPartecipants as integer,",
				"          detail_quantity as integer,",
				"          tickets_quantity as integer,",
				"          pax_quantity as integer,",
				"          costCenter_guid as string,",
				"          costCenter_label as string,",
				"          object_receipt as integer,",
				"          object_taxCode as string,",
				"          object_taxNotes as string,",
				"          object_amount as decimal(10,2),",
				"          object_taxPercentage as decimal(10,2),",
				"          amount as decimal(10,2),",
				"          amountNet as decimal(10,2),",
				"          amountPresale as decimal(10,2),",
				"          amountSold as decimal(10,2),",
				"          amountPayed as decimal(10,2),",
				"          amountPending as decimal(10,2),",
				"          amountCanceled as decimal(10,2),",
				"          externalId as string,",
				"          amountRefunded as decimal(10,2),",
				"          invoiceSummary as decimal(10,2),",
				"          eventCalendar_guid as string,",
				"          passDetail_guid as decimal(10,2),",
				"          paymentCostCenter_guid as decimal(10,2),",
				"          organization_guid as string,",
				"          venue_guid as string,",
				"          olapUpdateTimestamp as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SourceCSV",
				"SourceCSV select(mapColumn(",
				"          guid_pk,",
				"          reservation_progressiveCode,",
				"          reservation_code,",
				"          reservation_status,",
				"          invoiceRequired,",
				"          customer,",
				"          visitDate,",
				"          reservationPayment_guid,",
				"          parentPayment_guid,",
				"          sliced,",
				"          reservation_guid,",
				"          group_guid,",
				"          group_label,",
				"          group_email,",
				"          paymentCode,",
				"          paymentCondition,",
				"          reservation_amount,",
				"          reservation_amountTax,",
				"          status,",
				"          status_text,",
				"          stamp,",
				"          notes,",
				"          transactionType,",
				"          transactionType_text,",
				"          paymentLimitDate,",
				"          paymentDate,",
				"          refund,",
				"          refunded,",
				"          convention_label,",
				"          receiptCode,",
				"          insertTimestamp,",
				"          updateTimestamp,",
				"          owner,",
				"          owner_text,",
				"          sessionId,",
				"          terminal_label,",
				"          terminalGroup_label,",
				"          gateway_guid,",
				"          gateway_label,",
				"          transactionID,",
				"          bankAccount_guid,",
				"          bankAccount_label,",
				"          channel_guid,",
				"          channel_label,",
				"          channelType,",
				"          detail_guid,",
				"          extra_guid,",
				"          priceList,",
				"          event,",
				"          detailType,",
				"          detail_text,",
				"          detail_label,",
				"          detail_count,",
				"          paymentDetail_guid,",
				"          detail_payingPartecipants,",
				"          detail_quantity,",
				"          tickets_quantity,",
				"          pax_quantity,",
				"          costCenter_guid,",
				"          costCenter_label,",
				"          object_receipt,",
				"          object_taxCode,",
				"          object_taxNotes,",
				"          object_amount,",
				"          object_taxPercentage,",
				"          amount,",
				"          amountNet,",
				"          amountPresale,",
				"          amountSold,",
				"          amountPayed,",
				"          amountPending,",
				"          amountCanceled,",
				"          externalId,",
				"          amountRefunded,",
				"          invoiceSummary,",
				"          eventCalendar_guid,",
				"          passDetail_guid,",
				"          paymentCostCenter_guid,",
				"          organization_guid,",
				"          venue_guid,",
				"          olapUpdateTimestamp",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectFields",
				"SelectFields sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     partitionFileNames:['VFD_DFL_Mida_Sales_Raw_Processed_output.parquet'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     partitionBy('hash', 1),",
				"     fileName: $destfileName) ~> SinkParquet"
			]
		}
	}
}