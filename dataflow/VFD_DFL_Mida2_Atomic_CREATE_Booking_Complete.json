{
	"name": "VFD_DFL_Mida2_Atomic_CREATE_Booking_Complete",
	"properties": {
		"folder": {
			"name": "Mida2/Bookings/Atomic"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "VFD_DS_Processed_Mida_Bookings_Parquet",
						"type": "DatasetReference"
					},
					"name": "SourceProcessed"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "VFD_DS_Curated_Mida_Bookings_Complete_Parquet",
						"type": "DatasetReference"
					},
					"name": "SinkComplete"
				}
			],
			"transformations": [
				{
					"name": "FilterByReservationCode"
				}
			],
			"scriptLines": [
				"parameters{",
				"     reservationCode as string",
				"}",
				"source(output(",
				"          guid_pk as string,",
				"          reservation_progressiveCode as string,",
				"          reservation_code as string,",
				"          reservation_status as integer,",
				"          invoiceRequired as string,",
				"          customer as decimal(10,2),",
				"          visitDate as date,",
				"          reservationPayment_guid as string,",
				"          parentPayment_guid as string,",
				"          sliced as string,",
				"          reservation_guid as string,",
				"          group_guid as string,",
				"          group_label as string,",
				"          group_email as string,",
				"          paymentCode as string,",
				"          paymentCondition as decimal(10,2),",
				"          reservation_amount as decimal(10,2),",
				"          reservation_amountTax as decimal(10,2),",
				"          status as integer,",
				"          status_text as string,",
				"          stamp as string,",
				"          notes as decimal(10,2),",
				"          transactionType as string,",
				"          transactionType_text as string,",
				"          paymentLimitDate as date,",
				"          paymentDate as date,",
				"          refund as string,",
				"          refunded as string,",
				"          convention_label as string,",
				"          receiptCode as decimal(10,2),",
				"          insertTimestamp as date,",
				"          updateTimestamp as date,",
				"          owner as string,",
				"          owner_text as string,",
				"          sessionId as string,",
				"          terminal_label as decimal(10,2),",
				"          terminalGroup_label as decimal(10,2),",
				"          gateway_guid as string,",
				"          gateway_label as string,",
				"          transactionID as string,",
				"          bankAccount_guid as decimal(10,2),",
				"          bankAccount_label as decimal(10,2),",
				"          channel_guid as string,",
				"          channel_label as string,",
				"          channelType as string,",
				"          detail_guid as string,",
				"          extra_guid as decimal(10,2),",
				"          priceList as string,",
				"          event as string,",
				"          detailType as string,",
				"          detail_text as string,",
				"          detail_label as string,",
				"          detail_count as integer,",
				"          paymentDetail_guid as string,",
				"          detail_payingPartecipants as integer,",
				"          detail_quantity as integer,",
				"          tickets_quantity as integer,",
				"          pax_quantity as integer,",
				"          costCenter_guid as string,",
				"          costCenter_label as string,",
				"          object_receipt as integer,",
				"          object_taxCode as string,",
				"          object_taxNotes as string,",
				"          object_amount as decimal(10,2),",
				"          object_taxPercentage as decimal(10,2),",
				"          amount as decimal(10,2),",
				"          amountNet as decimal(10,2),",
				"          amountPresale as decimal(10,2),",
				"          amountSold as decimal(10,2),",
				"          amountPayed as decimal(10,2),",
				"          amountPending as decimal(10,2),",
				"          amountCanceled as decimal(10,2),",
				"          externalId as string,",
				"          amountRefunded as decimal(10,2),",
				"          invoiceSummary as decimal(10,2),",
				"          eventCalendar_guid as string,",
				"          passDetail_guid as decimal(10,2),",
				"          paymentCostCenter_guid as decimal(10,2),",
				"          organization_guid as string,",
				"          venue_guid as string,",
				"          olapUpdateTimestamp as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> SourceProcessed",
				"SourceProcessed filter(reservation_code == $reservationCode) ~> FilterByReservationCode",
				"FilterByReservationCode sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          guid_pk as string,",
				"          reservation_progressiveCode as string,",
				"          reservation_code as string,",
				"          reservation_status as integer,",
				"          invoiceRequired as boolean,",
				"          customer as string,",
				"          visitDate as timestamp,",
				"          reservationPayment_guid as string,",
				"          parentPayment_guid as string,",
				"          sliced as boolean,",
				"          reservation_guid as string,",
				"          group_guid as string,",
				"          group_label as string,",
				"          group_email as string,",
				"          paymentCode as string,",
				"          paymentCondition as decimal(10,2),",
				"          reservation_amount as decimal(10,2),",
				"          reservation_amountTax as decimal(10,2),",
				"          status as integer,",
				"          paymentDate as timestamp,",
				"          amount as decimal(10,2),",
				"          amountTax as decimal(10,2),",
				"          paymentMethod as string,",
				"          paymentStatus as integer,",
				"          transactionStatus as integer,",
				"          transactionProvider as string,",
				"          transactionId as string,",
				"          authorizationCode as string,",
				"          cardMask as string,",
				"          cardType as string,",
				"          cardCountry as string,",
				"          threeDSecure as boolean,",
				"          refundableAmount as decimal(10,2),",
				"          refundedAmount as decimal(10,2),",
				"          priceList as string,",
				"          priceListType as string,",
				"          distributionChannel as string,",
				"          bookingPartner as string,",
				"          partnerReference as string,",
				"          partnerCommission as decimal(10,2),",
				"          voucher_guid as string,",
				"          voucher_code as string,",
				"          voucher_type as string,",
				"          voucher_amount as decimal(10,2),",
				"          voucher_validFrom as timestamp,",
				"          voucher_validTo as timestamp,",
				"          customer_guid as string,",
				"          customer_firstName as string,",
				"          customer_lastName as string,",
				"          customer_email as string,",
				"          customer_phone as string,",
				"          customer_birthDate as date,",
				"          customer_gender as string,",
				"          customer_nationality as string,",
				"          customer_address as string,",
				"          customer_city as string,",
				"          customer_zipCode as string,",
				"          customer_country as string,",
				"          customer_company as string,",
				"          customer_vatNumber as string,",
				"          customer_fiscalCode as string,",
				"          customer_type as string,",
				"          customer_registrationDate as timestamp,",
				"          customer_marketingConsent as boolean,",
				"          customer_privacyConsent as boolean,",
				"          ticket_guid as string,",
				"          ticket_code as string,",
				"          ticket_type as string,",
				"          ticket_price as decimal(10,2),",
				"          ticket_quantity as integer,",
				"          ticket_validFrom as timestamp,",
				"          ticket_validTo as timestamp,",
				"          ticket_status as integer,",
				"          ticket_usedDate as timestamp,",
				"          ticket_refunded as boolean,",
				"          pax_adult as integer,",
				"          pax_child as integer,",
				"          pax_infant as integer,",
				"          pax_senior as integer,",
				"          pax_student as integer,",
				"          pax_disabled as integer,",
				"          pax_quantity as integer,",
				"          insertTimestamp as timestamp,",
				"          updateTimestamp as timestamp,",
				"          processedBy as string,",
				"          sourceFile as string",
				"     ),",
				"     format: 'parquet',",
				"     partitionFileNames:['booking_complete.parquet'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> SinkComplete"
			]
		}
	}
}