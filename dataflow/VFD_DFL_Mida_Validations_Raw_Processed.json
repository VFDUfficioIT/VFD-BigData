{
	"name": "VFD_DFL_Mida_Validations_Raw_Processed",
	"properties": {
		"description": "Dataflow per convertire Excel Validations in Parquet con conversioni di tipo",
		"folder": {
			"name": "Mida/Validations"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "VFD_DS_Raw_Mida_Validations_Excel",
						"type": "DatasetReference"
					},
					"name": "SourceExcel"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "VFD_DS_Processed_Mida_Validations_Parquet",
						"type": "DatasetReference"
					},
					"name": "SinkParquet",
					"rejectedDataLinkedService": {
						"referenceName": "VFD_Big_Data_DL",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "dataTypeConversions"
				}
			],
			"scriptLines": [
				"source(output(",
				"          event_guid as string,",
				"          siae as integer,",
				"          seal as string,",
				"          reservationCode as string,",
				"          inGateTimestamp as string,",
				"          entranceLabel as string,",
				"          passCode as string,",
				"          externalCode as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SourceExcel",
				"SourceExcel derive(processing_date = currentUTC(),",
				"          data_source = 'mida_validations',",
				"          inGateTimestamp = toTimestamp(inGateTimestamp, 'dd/MM/yyyy')) ~> dataTypeConversions",
				"dataTypeConversions sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     partitionFileNames:['VFD_DFL_Mida_Validations_Raw_Processed_output.parquet'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     partitionBy('hash', 1),",
				"     compressionCodec: 'snappy') ~> SinkParquet"
			]
		}
	}
}