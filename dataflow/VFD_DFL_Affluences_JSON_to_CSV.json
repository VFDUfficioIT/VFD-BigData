{
	"name": "VFD_DFL_Affluences_JSON_to_CSV",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "VFD_DS_Temp_Affluences_JSON",
						"type": "DatasetReference"
					},
					"name": "SourceJSON"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "VFD_DS_Raw_Affluences_CSV",
						"type": "DatasetReference"
					},
					"name": "SinkCSV"
				}
			],
			"transformations": [
				{
					"name": "FlattenJSON"
				},
				{
					"name": "ExpandEntries"
				},
				{
					"name": "SelectColumns"
				}
			],
			"scriptLines": [
				"parameters{",
				"     date as string ('20250514')",
				"}",
				"source(output(",
				"          data as (results as (day as string, entries as (hour as string, occupancy as integer, entries as integer, exits as integer)[])[], site_id as string)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'singleDocument',",
				"     wildcardPaths:['temp/affluences/*.json']) ~> SourceJSON",
				"SourceJSON foldDown(unroll(data.results, data.results),",
				"     mapColumn(",
				"          day = data.results.day,",
				"          entries = data.results.entries,",
				"          site_id = data.site_id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> FlattenJSON",
				"FlattenJSON foldDown(unroll(entries, entries),",
				"     mapColumn(",
				"          site_id,",
				"          day,",
				"          hour = entries.hour,",
				"          occupancy = entries.occupancy,",
				"          entries_count = entries.entries,",
				"          exits_count = entries.exits",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> ExpandEntries",
				"ExpandEntries select(mapColumn(",
				"          site_id,",
				"          date = day,",
				"          hour,",
				"          occupancy,",
				"          entries = entries_count,",
				"          exits = exits_count",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectColumns",
				"SelectColumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          site_id as string,",
				"          site_name as string,",
				"          date as string,",
				"          hour as string,",
				"          occupancy as string,",
				"          entries as string,",
				"          exits as string",
				"     ),",
				"     partitionFileNames:['temp_output.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> SinkCSV"
			]
		}
	}
}