{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "VFD-Big-Data-DF"
		},
		"VFD_Big_Data_DL_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'VFD_Big_Data_DL'"
		},
		"VFD_LS_Mida_FtpServer_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'VFD_LS_Mida_FtpServer'"
		},
		"VFD_Big_Data_DL_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://vfdbigdataarchiviazione.dfs.core.windows.net/"
		},
		"VFD_LS_Affluences_API_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://data.affluences.com/v1/data"
		},
		"VFD_LS_Mida_FtpServer_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "217.73.236.242"
		},
		"VFD_LS_Mida_FtpServer_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "vfd_storico_ftp"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/VFD_Big_Data_DL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Data Lake per la raccolta di tutti i dati da analizzare e utilizzare per la creazione delle dashboard.",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('VFD_Big_Data_DL_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('VFD_Big_Data_DL_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VFD_LS_Affluences_API')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('VFD_LS_Affluences_API_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VFD_LS_Mida_FtpServer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FtpServer",
				"typeProperties": {
					"host": "[parameters('VFD_LS_Mida_FtpServer_properties_typeProperties_host')]",
					"port": "52013",
					"enableSsl": false,
					"enableServerCertificateValidation": false,
					"authenticationType": "Basic",
					"userName": "[parameters('VFD_LS_Mida_FtpServer_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('VFD_LS_Mida_FtpServer_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VFD_DS_Affluences_API')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VFD_LS_Affluences_API",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"siteUUID": {
						"type": "string"
					},
					"date": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Affluences"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat('historical/', dataset().siteUUID, '?date=', dataset().date)",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VFD_LS_Affluences_API')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VFD_DS_Curated_Affluences_Daily_Parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VFD_Big_Data_DL",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Affluences"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "curated"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "site_id",
						"type": "UTF8"
					},
					{
						"name": "site_name",
						"type": "UTF8"
					},
					{
						"name": "date",
						"type": "DATE"
					},
					{
						"name": "hour",
						"type": "UTF8"
					},
					{
						"name": "occupancy",
						"type": "INT32"
					},
					{
						"name": "entries",
						"type": "INT32"
					},
					{
						"name": "exits",
						"type": "INT32"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VFD_Big_Data_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VFD_DS_Curated_Affluences_Monthly_Parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VFD_Big_Data_DL",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Affluences"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "curated"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "date",
						"type": "DATE"
					},
					{
						"name": "total_entries",
						"type": "INT32"
					},
					{
						"name": "ascensore_nord_entries",
						"type": "INT32"
					},
					{
						"name": "ascensore_sud_entries",
						"type": "INT32"
					},
					{
						"name": "salita_piedi_entries",
						"type": "INT32"
					},
					{
						"name": "discesa_piedi_entries",
						"type": "INT32"
					},
					{
						"name": "max_occupancy",
						"type": "INT32"
					},
					{
						"name": "max_occupancy_hour",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VFD_Big_Data_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VFD_DS_Curated_Mida_Bookings_Parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VFD_Big_Data_DL",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "String"
					},
					"fileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Mida/Bookings"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "curated"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VFD_Big_Data_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VFD_DS_Mida_Bookings_FTPServer_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VFD_LS_Mida_FtpServer",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Mida/Bookings"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FtpServerLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						}
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VFD_LS_Mida_FtpServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VFD_DS_Mida_Bookings_FTPServer_Folder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VFD_LS_Mida_FtpServer",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Mida/Bookings"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "FtpServerLocation"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VFD_LS_Mida_FtpServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VFD_DS_Mida_Seals_FTPServer_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VFD_LS_Mida_FtpServer",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Mida/Seals"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FtpServerLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": "seals"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VFD_LS_Mida_FtpServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VFD_DS_Mida_Seals_FTPServer_Folder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VFD_LS_Mida_FtpServer",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Mida/Seals"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "FtpServerLocation",
						"folderPath": "seals"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VFD_LS_Mida_FtpServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VFD_DS_Processed_Affluences_Parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VFD_Big_Data_DL",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Affluences"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "processed"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "site_id",
						"type": "UTF8"
					},
					{
						"name": "site_name",
						"type": "UTF8"
					},
					{
						"name": "date",
						"type": "DATE"
					},
					{
						"name": "hour",
						"type": "UTF8"
					},
					{
						"name": "occupancy",
						"type": "INT32"
					},
					{
						"name": "entries",
						"type": "INT32"
					},
					{
						"name": "exits",
						"type": "INT32"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VFD_Big_Data_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VFD_DS_Processed_Mida_Bookings_Parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VFD_Big_Data_DL",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "String"
					},
					"fileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Mida/Bookings"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "processed"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "guid_pk",
						"type": "UTF8"
					},
					{
						"name": "reservation_progressiveCode",
						"type": "UTF8"
					},
					{
						"name": "reservation_code",
						"type": "UTF8"
					},
					{
						"name": "reservation_status",
						"type": "INT32"
					},
					{
						"name": "invoiceRequired",
						"type": "UTF8"
					},
					{
						"name": "customer",
						"type": "DECIMAL",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "visitDate",
						"type": "DATE"
					},
					{
						"name": "reservationPayment_guid",
						"type": "UTF8"
					},
					{
						"name": "parentPayment_guid",
						"type": "UTF8"
					},
					{
						"name": "sliced",
						"type": "UTF8"
					},
					{
						"name": "reservation_guid",
						"type": "UTF8"
					},
					{
						"name": "group_guid",
						"type": "UTF8"
					},
					{
						"name": "group_label",
						"type": "UTF8"
					},
					{
						"name": "group_email",
						"type": "UTF8"
					},
					{
						"name": "paymentCode",
						"type": "UTF8"
					},
					{
						"name": "paymentCondition",
						"type": "DECIMAL",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "reservation_amount",
						"type": "DECIMAL",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "reservation_amountTax",
						"type": "DECIMAL",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "status",
						"type": "INT32"
					},
					{
						"name": "status_text",
						"type": "UTF8"
					},
					{
						"name": "stamp",
						"type": "UTF8"
					},
					{
						"name": "notes",
						"type": "DECIMAL",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "transactionType",
						"type": "UTF8"
					},
					{
						"name": "transactionType_text",
						"type": "UTF8"
					},
					{
						"name": "paymentLimitDate",
						"type": "DATE"
					},
					{
						"name": "paymentDate",
						"type": "DATE"
					},
					{
						"name": "refund",
						"type": "UTF8"
					},
					{
						"name": "refunded",
						"type": "UTF8"
					},
					{
						"name": "convention_label",
						"type": "UTF8"
					},
					{
						"name": "receiptCode",
						"type": "DECIMAL",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "insertTimestamp",
						"type": "DATE"
					},
					{
						"name": "updateTimestamp",
						"type": "DATE"
					},
					{
						"name": "owner",
						"type": "UTF8"
					},
					{
						"name": "owner_text",
						"type": "UTF8"
					},
					{
						"name": "sessionId",
						"type": "UTF8"
					},
					{
						"name": "terminal_label",
						"type": "DECIMAL",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "terminalGroup_label",
						"type": "DECIMAL",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "gateway_guid",
						"type": "UTF8"
					},
					{
						"name": "gateway_label",
						"type": "UTF8"
					},
					{
						"name": "transactionID",
						"type": "UTF8"
					},
					{
						"name": "bankAccount_guid",
						"type": "DECIMAL",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "bankAccount_label",
						"type": "DECIMAL",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "channel_guid",
						"type": "UTF8"
					},
					{
						"name": "channel_label",
						"type": "UTF8"
					},
					{
						"name": "channelType",
						"type": "UTF8"
					},
					{
						"name": "detail_guid",
						"type": "UTF8"
					},
					{
						"name": "extra_guid",
						"type": "DECIMAL",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "priceList",
						"type": "UTF8"
					},
					{
						"name": "event",
						"type": "UTF8"
					},
					{
						"name": "detailType",
						"type": "UTF8"
					},
					{
						"name": "detail_text",
						"type": "UTF8"
					},
					{
						"name": "detail_label",
						"type": "UTF8"
					},
					{
						"name": "detail_count",
						"type": "INT32"
					},
					{
						"name": "paymentDetail_guid",
						"type": "UTF8"
					},
					{
						"name": "detail_payingPartecipants",
						"type": "INT32"
					},
					{
						"name": "detail_quantity",
						"type": "INT32"
					},
					{
						"name": "tickets_quantity",
						"type": "INT32"
					},
					{
						"name": "pax_quantity",
						"type": "INT32"
					},
					{
						"name": "costCenter_guid",
						"type": "UTF8"
					},
					{
						"name": "costCenter_label",
						"type": "UTF8"
					},
					{
						"name": "object_receipt",
						"type": "INT32"
					},
					{
						"name": "object_taxCode",
						"type": "UTF8"
					},
					{
						"name": "object_taxNotes",
						"type": "UTF8"
					},
					{
						"name": "object_amount",
						"type": "DECIMAL",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "object_taxPercentage",
						"type": "DECIMAL",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "amount",
						"type": "DECIMAL",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "amountNet",
						"type": "DECIMAL",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "amountPresale",
						"type": "DECIMAL",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "amountSold",
						"type": "DECIMAL",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "amountPayed",
						"type": "DECIMAL",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "amountPending",
						"type": "DECIMAL",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "amountCanceled",
						"type": "DECIMAL",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "externalId",
						"type": "UTF8"
					},
					{
						"name": "amountRefunded",
						"type": "DECIMAL",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "invoiceSummary",
						"type": "DECIMAL",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "eventCalendar_guid",
						"type": "UTF8"
					},
					{
						"name": "passDetail_guid",
						"type": "DECIMAL",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "paymentCostCenter_guid",
						"type": "DECIMAL",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "organization_guid",
						"type": "UTF8"
					},
					{
						"name": "venue_guid",
						"type": "UTF8"
					},
					{
						"name": "olapUpdateTimestamp",
						"type": "DATE"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VFD_Big_Data_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VFD_DS_Raw_Affluences_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VFD_Big_Data_DL",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Affluences"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "site_id",
						"type": "String"
					},
					{
						"name": "site_name",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "hour",
						"type": "String"
					},
					{
						"name": "occupancy",
						"type": "String"
					},
					{
						"name": "entries",
						"type": "String"
					},
					{
						"name": "exits",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VFD_Big_Data_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VFD_DS_Raw_Affluences_JSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VFD_Big_Data_DL",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Affluences"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"data": {
							"type": "object",
							"properties": {
								"results": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"day": {
												"type": "string"
											},
											"entries": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"hour": {
															"type": "string"
														},
														"occupancy": {
															"type": "integer"
														},
														"entries": {
															"type": "integer"
														},
														"exits": {
															"type": "integer"
														}
													}
												}
											}
										}
									}
								},
								"site_id": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VFD_Big_Data_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VFD_DS_Raw_Mida_Bookings_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VFD_Big_Data_DL",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "String"
					},
					"fileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Mida/Bookings"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "guid_pk",
						"type": "String"
					},
					{
						"name": "reservation_progressiveCode",
						"type": "String"
					},
					{
						"name": "reservation_code",
						"type": "String"
					},
					{
						"name": "reservation_status",
						"type": "String"
					},
					{
						"name": "invoiceRequired",
						"type": "String"
					},
					{
						"name": "customer",
						"type": "String"
					},
					{
						"name": "visitDate",
						"type": "String"
					},
					{
						"name": "reservationPayment_guid",
						"type": "String"
					},
					{
						"name": "parentPayment_guid",
						"type": "String"
					},
					{
						"name": "sliced",
						"type": "String"
					},
					{
						"name": "reservation_guid",
						"type": "String"
					},
					{
						"name": "group_guid",
						"type": "String"
					},
					{
						"name": "group_label",
						"type": "String"
					},
					{
						"name": "group_email",
						"type": "String"
					},
					{
						"name": "paymentCode",
						"type": "String"
					},
					{
						"name": "paymentCondition",
						"type": "String"
					},
					{
						"name": "reservation_amount",
						"type": "String"
					},
					{
						"name": "reservation_amountTax",
						"type": "String"
					},
					{
						"name": "status",
						"type": "String"
					},
					{
						"name": "status_text",
						"type": "String"
					},
					{
						"name": "stamp",
						"type": "String"
					},
					{
						"name": "notes",
						"type": "String"
					},
					{
						"name": "transactionType",
						"type": "String"
					},
					{
						"name": "transactionType_text",
						"type": "String"
					},
					{
						"name": "paymentLimitDate",
						"type": "String"
					},
					{
						"name": "paymentDate",
						"type": "String"
					},
					{
						"name": "refund",
						"type": "String"
					},
					{
						"name": "refunded",
						"type": "String"
					},
					{
						"name": "convention_label",
						"type": "String"
					},
					{
						"name": "receiptCode",
						"type": "String"
					},
					{
						"name": "insertTimestamp",
						"type": "String"
					},
					{
						"name": "updateTimestamp",
						"type": "String"
					},
					{
						"name": "owner",
						"type": "String"
					},
					{
						"name": "owner_text",
						"type": "String"
					},
					{
						"name": "sessionId",
						"type": "String"
					},
					{
						"name": "terminal_label",
						"type": "String"
					},
					{
						"name": "terminalGroup_label",
						"type": "String"
					},
					{
						"name": "gateway_guid",
						"type": "String"
					},
					{
						"name": "gateway_label",
						"type": "String"
					},
					{
						"name": "transactionID",
						"type": "String"
					},
					{
						"name": "bankAccount_guid",
						"type": "String"
					},
					{
						"name": "bankAccount_label",
						"type": "String"
					},
					{
						"name": "channel_guid",
						"type": "String"
					},
					{
						"name": "channel_label",
						"type": "String"
					},
					{
						"name": "channelType",
						"type": "String"
					},
					{
						"name": "detail_guid",
						"type": "String"
					},
					{
						"name": "extra_guid",
						"type": "String"
					},
					{
						"name": "priceList",
						"type": "String"
					},
					{
						"name": "event",
						"type": "String"
					},
					{
						"name": "detailType",
						"type": "String"
					},
					{
						"name": "detail_text",
						"type": "String"
					},
					{
						"name": "detail_label",
						"type": "String"
					},
					{
						"name": "detail_count",
						"type": "String"
					},
					{
						"name": "paymentDetail_guid",
						"type": "String"
					},
					{
						"name": "detail_payingPartecipants",
						"type": "String"
					},
					{
						"name": "detail_quantity",
						"type": "String"
					},
					{
						"name": "tickets_quantity",
						"type": "String"
					},
					{
						"name": "pax_quantity",
						"type": "String"
					},
					{
						"name": "costCenter_guid",
						"type": "String"
					},
					{
						"name": "costCenter_label",
						"type": "String"
					},
					{
						"name": "object_receipt",
						"type": "String"
					},
					{
						"name": "object_taxCode",
						"type": "String"
					},
					{
						"name": "object_taxNotes",
						"type": "String"
					},
					{
						"name": "object_amount",
						"type": "String"
					},
					{
						"name": "object_taxPercentage",
						"type": "String"
					},
					{
						"name": "amount",
						"type": "String"
					},
					{
						"name": "amountNet",
						"type": "String"
					},
					{
						"name": "amountPresale",
						"type": "String"
					},
					{
						"name": "amountSold",
						"type": "String"
					},
					{
						"name": "amountPayed",
						"type": "String"
					},
					{
						"name": "amountPending",
						"type": "String"
					},
					{
						"name": "amountCanceled",
						"type": "String"
					},
					{
						"name": "externalId",
						"type": "String"
					},
					{
						"name": "amountRefunded",
						"type": "String"
					},
					{
						"name": "invoiceSummary",
						"type": "String"
					},
					{
						"name": "eventCalendar_guid",
						"type": "String"
					},
					{
						"name": "passDetail_guid",
						"type": "String"
					},
					{
						"name": "paymentCostCenter_guid",
						"type": "String"
					},
					{
						"name": "organization_guid",
						"type": "String"
					},
					{
						"name": "venue_guid",
						"type": "String"
					},
					{
						"name": "olapUpdateTimestamp",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VFD_Big_Data_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VFD_DS_Raw_Mida_Bookings_Folder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VFD_Big_Data_DL",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Mida/Bookings"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VFD_Big_Data_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VFD_DS_Temp_Affluences_JSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VFD_Big_Data_DL",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Affluences"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": "temp/affluences",
						"fileSystem": "staging"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"data": {
							"type": "object",
							"properties": {
								"results": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"day": {
												"type": "string"
											},
											"entries": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"hour": {
															"type": "string"
														},
														"occupancy": {
															"type": "integer"
														},
														"entries": {
															"type": "integer"
														},
														"exits": {
															"type": "integer"
														}
													}
												}
											}
										}
									}
								},
								"site_id": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VFD_Big_Data_DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VFD_DFL_Affluences_Daily_to_Curated')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Affluences"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "VFD_DS_Processed_Affluences_Parquet",
								"type": "DatasetReference"
							},
							"name": "SourceProcessed"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "VFD_DS_Curated_Affluences_Daily_Parquet",
								"type": "DatasetReference"
							},
							"name": "SinkCuratedDaily"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          site_id as string,",
						"          site_name as string,",
						"          date as date,",
						"          hour as string,",
						"          occupancy as integer,",
						"          entries as integer,",
						"          exits as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> SourceProcessed",
						"SourceProcessed sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          site_id as string,",
						"          site_name as string,",
						"          date as date,",
						"          hour as string,",
						"          occupancy as integer,",
						"          entries as integer,",
						"          exits as integer",
						"     ),",
						"     format: 'parquet',",
						"     partitionFileNames:['VFD_DFL_Affluences_Daily_to_Curated_output.parquet'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1),",
						"     compressionCodec: 'snappy') ~> SinkCuratedDaily"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/VFD_DS_Processed_Affluences_Parquet')]",
				"[concat(variables('factoryId'), '/datasets/VFD_DS_Curated_Affluences_Daily_Parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VFD_DFL_Affluences_JSON_to_CSV')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Affluences"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "VFD_DS_Temp_Affluences_JSON",
								"type": "DatasetReference"
							},
							"name": "SourceJSON"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "VFD_DS_Raw_Affluences_CSV",
								"type": "DatasetReference"
							},
							"name": "SinkCSV",
							"rejectedDataLinkedService": {
								"referenceName": "VFD_Big_Data_DL",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "FlattenJSON"
						},
						{
							"name": "ExpandEntries"
						},
						{
							"name": "SelectColumns"
						},
						{
							"name": "AddSiteName"
						}
					],
					"scriptLines": [
						"parameters{",
						"     date as string ('20250514')",
						"}",
						"source(output(",
						"          data as (results as (day as string, entries as (hour as string, occupancy as integer, entries as integer, exits as integer)[])[], site_id as string)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine',",
						"     wildcardPaths:['temp/affluences/*.json']) ~> SourceJSON",
						"SourceJSON foldDown(unroll(data.results, data.results),",
						"     mapColumn(",
						"          day = data.results.day,",
						"          entries = data.results.entries,",
						"          site_uuid = data.site_id",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> FlattenJSON",
						"FlattenJSON foldDown(unroll(entries, entries),",
						"     mapColumn(",
						"          site_uuid,",
						"          day,",
						"          hour = entries.hour,",
						"          occupancy = entries.occupancy,",
						"          entries_count = entries.entries,",
						"          exits_count = entries.exits",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> ExpandEntries",
						"ExpandEntries select(mapColumn(",
						"          site_uuid,",
						"          date = day,",
						"          hour,",
						"          occupancy,",
						"          entries = entries_count,",
						"          exits = exits_count",
						"     ),",
						"     partitionBy('hash', 1),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> SelectColumns",
						"SelectColumns derive(site_name = case(   site_uuid == '5a2757bc-e1c6-4d5e-9db3-edfc4e9c9307', 'Terrazze',   site_uuid == 'ca2dae61-4a99-4cb7-8051-26cb852ea408', 'Ascensore Nord',   site_uuid == 'aa6c22f1-84b6-441a-bbb0-bd429e63536d', 'Ascensore Sud',   site_uuid == '8358df5f-0186-4a11-87ad-11fc19cda749', 'Salita a piedi',   site_uuid == '639bc326-010a-402f-ba5f-3c75e2740d9d', 'Discesa a piedi',   'Unknown' )) ~> AddSiteName",
						"AddSiteName sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          site_id as string,",
						"          site_name as string,",
						"          date as string,",
						"          hour as string,",
						"          occupancy as string,",
						"          entries as string,",
						"          exits as string",
						"     ),",
						"     partitionFileNames:['temp_output.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          site_id = site_uuid,",
						"          site_name,",
						"          date,",
						"          hour,",
						"          occupancy,",
						"          entries,",
						"          exits",
						"     ),",
						"     partitionBy('hash', 1)) ~> SinkCSV"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/VFD_DS_Temp_Affluences_JSON')]",
				"[concat(variables('factoryId'), '/datasets/VFD_DS_Raw_Affluences_CSV')]",
				"[concat(variables('factoryId'), '/linkedServices/VFD_Big_Data_DL')]"
			]
		}
	]
}