{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "VFD-Big-Data-DF"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/VFD_DS_Raw_Affluences_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VFD_Big_Data_DL",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Affluences"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "site_id",
						"type": "String"
					},
					{
						"name": "site_name",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "hour",
						"type": "String"
					},
					{
						"name": "occupancy",
						"type": "String"
					},
					{
						"name": "entries",
						"type": "String"
					},
					{
						"name": "exits",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VFD_DS_Raw_Affluences_JSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VFD_Big_Data_DL",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Affluences"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"data": {
							"type": "object",
							"properties": {
								"results": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"day": {
												"type": "string"
											},
											"entries": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"hour": {
															"type": "string"
														},
														"occupancy": {
															"type": "integer"
														},
														"entries": {
															"type": "integer"
														},
														"exits": {
															"type": "integer"
														}
													}
												}
											}
										}
									}
								},
								"site_id": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VFD_DS_Raw_DuomoWiFi_Connections_JSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VFD_Big_Data_DL",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"year": {
						"type": "string"
					},
					"month": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "WiFi/Raw"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('Wifi/connections/', dataset().year, '/', dataset().month)",
							"type": "Expression"
						},
						"fileSystem": "raw"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"generated": {
							"type": "string"
						},
						"sId": {
							"type": "string"
						},
						"count": {
							"type": "integer"
						},
						"connections": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"customerId": {
										"type": "string"
									},
									"username": {
										"type": "string"
									},
									"organizationId": {
										"type": "string"
									},
									"start": {
										"type": "string"
									},
									"startBusiness": {
										"type": "string"
									},
									"stop": {
										"type": "string"
									},
									"stopBusiness": {
										"type": "string"
									},
									"duration": {
										"type": "integer"
									},
									"traffic": {
										"type": "integer"
									},
									"locationName": {
										"type": "string"
									},
									"locationId": {
										"type": "string"
									},
									"hotspotIdentifier": {
										"type": "string"
									},
									"hotspotId": {
										"type": "string"
									},
									"latitude": {
										"type": "number"
									},
									"longitude": {
										"type": "number"
									},
									"macAddressClient": {
										"type": "string"
									},
									"ipAddressClient": {
										"type": "string"
									},
									"terminateCause": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VFD_DS_Raw_DuomoWiFi_Users_JSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VFD_Big_Data_DL",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					},
					"year": {
						"type": "string"
					},
					"month": {
						"type": "string"
					}
				},
				"folder": {
					"name": "WiFi/Raw"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('Wifi/users/', dataset().year, '/', dataset().month)",
							"type": "Expression"
						},
						"fileSystem": "raw"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VFD_DS_Raw_Mida_Bookings_Binary')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VFD_Big_Data_DL",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "String"
					},
					"fileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Mida/Bookings"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VFD_DS_Raw_Mida_Bookings_Excel')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VFD_Big_Data_DL",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "String"
					},
					"fileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Mida/Bookings"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "export",
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VFD_DS_Raw_Mida_Bookings_Folder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VFD_Big_Data_DL",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Mida/Bookings"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VFD_DS_Raw_Mida_Seals_Binary')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VFD_Big_Data_DL",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "String"
					},
					"fileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Mida/Seals"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"sheetName": "Emissioni di ieri",
					"firstRowAsHeader": true
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VFD_DS_Raw_Mida_Seals_Excel')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VFD_Big_Data_DL",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "String"
					},
					"fileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Mida/Seals"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Emissioni di ieri",
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VFD_DS_Raw_Mida_Validations_Binary')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VFD_Big_Data_DL",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "String"
					},
					"fileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Mida/Validations"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"sheetName": "Vidimazioni di ieri",
					"firstRowAsHeader": true
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VFD_DS_Raw_Mida_Validations_Excel')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VFD_Big_Data_DL",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "String"
					},
					"fileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Mida/Validations"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Vidimazioni di ieri",
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VFD_DS_Raw_Weather_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VFD_Big_Data_DL",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "String"
					},
					"fileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Visual Crossing/Weather"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VFD_DS_Temp_Affluences_JSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VFD_Big_Data_DL",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Affluences"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": "temp/affluences",
						"fileSystem": "staging"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"data": {
							"type": "object",
							"properties": {
								"results": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"day": {
												"type": "string"
											},
											"entries": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"hour": {
															"type": "string"
														},
														"occupancy": {
															"type": "integer"
														},
														"entries": {
															"type": "integer"
														},
														"exits": {
															"type": "integer"
														}
													}
												}
											}
										}
									}
								},
								"site_id": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VFD_DS_VisualCrossing_HTTP_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VFD_LS_VisualCrossing_HTTP",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"data_inizio": {
						"type": "string"
					},
					"data_fine": {
						"type": "string"
					},
					"location": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Visual Crossing/Weather"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@concat(dataset().location,'/',dataset().data_inizio,'/',dataset().data_fine,'?unitGroup=metric&elements=datetime%2Cname%2Ctempmax%2Ctempmin%2Ctemp%2Cfeelslikemax%2Cfeelslikemin%2Cfeelslike%2Chumidity%2Cprecip%2Cpreciptype%2Cwindgust%2Cwindspeed%2Ccloudcover%2Cvisibility%2Csunset%2Cconditions%2Cdescription%2Cicon&include=days%2C&key=K8ZWJUA9BMDLD97KL8KGY292Y&contentType=csv')",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VFD_DS_VisualCrossing_Historical_API')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VFD_LS_VisualCrossing_API",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"data_inizio": {
						"type": "string"
					},
					"data_fine": {
						"type": "string"
					},
					"location": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Visual Crossing/Weather"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat(dataset().location,'/',dataset().data_inizio,'/',dataset().data_fine,'?unitGroup=metric&elements=datetime%2Cname%2Ctempmax%2Ctempmin%2Ctemp%2Cfeelslikemax%2Cfeelslikemin%2Cfeelslike%2Chumidity%2Cprecip%2Cpreciptype%2Cwindgust%2Cwindspeed%2Ccloudcover%2Cvisibility%2Csunset%2Cconditions%2Cdescription%2Cicon&include=days%2C&key=K8ZWJUA9BMDLD97KL8KGY292Y&contentType=csv')",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VFD_PL_Explore_Seals_Folder')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Esplora il contenuto della cartella 'emissioni' per capire i pattern dei file Seals",
				"activities": [
					{
						"name": "ListSealsFiles",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "VFD_DS_Mida_Seals_FTPServer_Folder",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "FtpReadSettings",
								"recursive": false,
								"enablePartitionDiscovery": false,
								"useBinaryTransfer": true,
								"disableChunking": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Mida/Utilities"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VFD_PL_Mida_Bookings_FTP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Pipeline arricchita: FTP → ADLS solo se nuovo → Data Flow → Copy → Delete",
				"activities": [
					{
						"name": "ListFTPFiles",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "VFD_DS_Mida_Bookings_FTPServer_Folder",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								{
									"value": "childItems",
									"type": "Expression"
								}
							],
							"storeSettings": {
								"type": "FtpReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false,
								"useBinaryTransfer": true,
								"disableChunking": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEachFTPFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ListFTPFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('ListFTPFiles').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "SetFileName",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "fileName",
										"value": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SetYear",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SetFileName",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "year",
										"value": {
											"value": "@substring(item().name, 37, 4)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SetMonth",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SetYear",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "month",
										"value": {
											"value": "@substring(item().name, 41, 2)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SetDay",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SetMonth",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "day",
										"value": {
											"value": "@substring(item().name, 43, 2)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SetFolderPathVar",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SetDay",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "folderPathVar",
										"value": {
											"value": "@concat('Mida/Bookings/', variables('year'), '/', variables('month'))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SetDateString",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SetFolderPathVar",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "dateString",
										"value": {
											"value": "@concat(variables('year'), variables('month'), variables('day'))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "CheckIfExistsOnADLS",
									"type": "GetMetadata",
									"dependsOn": [
										{
											"activity": "SetDateString",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "VFD_DS_Raw_Mida_Bookings_Binary",
											"type": "DatasetReference",
											"parameters": {
												"folderPath": {
													"value": "@variables('folderPathVar')",
													"type": "Expression"
												},
												"fileName": {
													"value": "@variables('fileName')",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"exists"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								},
								{
									"name": "ProcessFileIfCondition",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "CheckIfExistsOnADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@and(endswith(toLower(variables('fileName')), '.xlsx'), not(activity('CheckIfExistsOnADLS').output.exists))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "CopyFromFTP",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "BinarySource",
														"storeSettings": {
															"type": "FtpReadSettings",
															"recursive": true,
															"useBinaryTransfer": true,
															"disableChunking": false
														},
														"formatSettings": {
															"type": "BinaryReadSettings"
														}
													},
													"sink": {
														"type": "BinarySink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "VFD_DS_Mida_Bookings_FTPServer_Binary",
														"type": "DatasetReference",
														"parameters": {
															"fileName": "@variables('fileName')"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "VFD_DS_Raw_Mida_Bookings_Binary",
														"type": "DatasetReference",
														"parameters": {
															"folderPath": "@variables('folderPathVar')",
															"fileName": "@variables('fileName')"
														}
													}
												]
											},
											{
												"name": "CopyExcelToParquet",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "CopyFromFTP",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "ExcelSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														}
													},
													"sink": {
														"type": "ParquetSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "ParquetWriteSettings"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "VFD_DS_Raw_Mida_Bookings_Excel",
														"type": "DatasetReference",
														"parameters": {
															"folderPath": "@variables('folderPathVar')",
															"fileName": "@variables('fileName')"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "VFD_DS_Processed_Mida_Bookings_Parquet",
														"type": "DatasetReference",
														"parameters": {
															"folderPath": "@variables('folderPathVar')",
															"fileName": "@replace(variables('fileName'), '.xlsx', '.parquet')"
														}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"fileName": {
						"type": "String"
					},
					"year": {
						"type": "String"
					},
					"month": {
						"type": "String"
					},
					"folderPathVar": {
						"type": "String"
					},
					"day": {
						"type": "String"
					},
					"dateString": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Mida/Bookings"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/VFD_DS_Raw_Mida_Bookings_Binary')]",
				"[concat(variables('factoryId'), '/datasets/VFD_DS_Raw_Mida_Bookings_Excel')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VFD_PL_Mida_FTP_Simple_Explorer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Pipeline semplice per ottenere la lista delle directory del server FTP Mida",
				"activities": [
					{
						"name": "ListAllFTPDirectories",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "VFD_DS_Mida_Bookings_FTPServer_Folder",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "FtpReadSettings",
								"recursive": false,
								"enablePartitionDiscovery": false,
								"useBinaryTransfer": true,
								"disableChunking": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Mida/Utilities"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VFD_PL_Utils_AccessAreas_Raw_Curated')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "TicketArea_CopyRawToProcessed",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "VFD_DS_Raw_AccessAreas_Excel",
								"type": "DatasetReference",
								"parameters": {
									"fileName": "AssociazioneBigliettiAccessi.xlsx"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "VFD_DS_Processed_AccessAreas_Parquet",
								"type": "DatasetReference",
								"parameters": {
									"fileName": "AssociazioneBigliettiAccessi.parquet"
								}
							}
						]
					},
					{
						"name": "TicketArea_CopyProcessedToCurated",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TicketArea_CopyRawToProcessed",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "VFD_DS_Processed_AccessAreas_Parquet",
								"type": "DatasetReference",
								"parameters": {
									"fileName": "AssociazioneBigliettiAccessi.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "VFD_DS_Curated_AccessAreas_Parquet",
								"type": "DatasetReference",
								"parameters": {
									"fileName": "AssociazioneBigliettiAccessi.parquet"
								}
							}
						]
					},
					{
						"name": "AreaSiteID_CopyRawToProcessed",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TicketArea_CopyProcessedToCurated",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "VFD_DS_Raw_AccessAreas_Excel",
								"type": "DatasetReference",
								"parameters": {
									"fileName": "AssociazioneAccessiSiteIDAffluences.xlsx"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "VFD_DS_Processed_AccessAreas_Parquet",
								"type": "DatasetReference",
								"parameters": {
									"fileName": "AssociazioneAccessiSiteIDAffluences.parquet"
								}
							}
						]
					},
					{
						"name": "AreaSiteID_CopyProcessedToCurated",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "AreaSiteID_CopyRawToProcessed",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "VFD_DS_Processed_AccessAreas_Parquet",
								"type": "DatasetReference",
								"parameters": {
									"fileName": "AssociazioneAccessiSiteIDAffluences.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "VFD_DS_Curated_AccessAreas_Parquet",
								"type": "DatasetReference",
								"parameters": {
									"fileName": "AssociazioneAccessiSiteIDAffluences.parquet"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Utils/AccessAreas"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VFD_DFL_Affluences_Daily_to_Curated')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Affluences"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "VFD_DS_Processed_Affluences_Parquet",
								"type": "DatasetReference"
							},
							"name": "SourceProcessed"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "VFD_DS_Curated_Affluences_Daily_Parquet",
								"type": "DatasetReference"
							},
							"name": "SinkCuratedDaily"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          site_id as string,",
						"          site_name as string,",
						"          date as date,",
						"          hour as string,",
						"          occupancy as integer,",
						"          entries as integer,",
						"          exits as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> SourceProcessed",
						"SourceProcessed sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          site_id as string,",
						"          site_name as string,",
						"          date as date,",
						"          hour as string,",
						"          occupancy as integer,",
						"          entries as integer,",
						"          exits as integer",
						"     ),",
						"     format: 'parquet',",
						"     partitionFileNames:['VFD_DFL_Affluences_Daily_to_Curated_output.parquet'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1),",
						"     compressionCodec: 'snappy') ~> SinkCuratedDaily"
					]
				}
			},
			"dependsOn": []
		}
	]
}