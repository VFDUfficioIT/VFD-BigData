{
	"name": "VFD_PL_Mida2_Atomic_APPEND_Historical",
	"properties": {
		"description": "Pipeline atomica per aggiunta al log storico delle prenotazioni",
		"activities": [
			{
				"name": "Check Historical File Exists",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "VFD_DS_Curated_Mida_Historical_Parquet",
						"type": "DatasetReference",
						"parameters": {
							"folderPath": "@pipeline().parameters.targetFolderPath",
							"fileName": "@pipeline().parameters.targetFileName"
						}
					},
					"fieldList": [
						"exists"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "ParquetReadSettings"
					}
				}
			},
			{
				"name": "If Historical Exists Then Append Else Create",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Check Historical File Exists",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@activity('Check Historical File Exists').output.exists",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Create New Historical File",
							"type": "ExecuteDataFlow",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataflow": {
									"referenceName": "VFD_DFL_Mida2_Atomic_CREATE_Historical",
									"type": "DataFlowReference",
									"parameters": {
										"reservationCode": {
											"value": "'@{pipeline().parameters.reservationCode}'",
											"type": "Expression"
										},
										"operationType": {
											"value": "'@{pipeline().parameters.operationType}'",
											"type": "Expression"
										}
									},
									"datasetParameters": {
										"SourceProcessed": {
											"folderPath": "@pipeline().parameters.processedFolderPath",
											"fileName": "@pipeline().parameters.processedFileName"
										},
										"SinkHistorical": {
											"folderPath": "@pipeline().parameters.targetFolderPath",
											"fileName": "@pipeline().parameters.targetFileName"
										}
									}
								},
								"compute": {
									"coreCount": 8,
									"computeType": "General"
								},
								"traceLevel": "Fine"
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Append To Historical Log",
							"type": "ExecuteDataFlow",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataflow": {
									"referenceName": "VFD_DFL_Mida2_Atomic_APPEND_Historical",
									"type": "DataFlowReference",
									"parameters": {
										"reservationCode": {
											"value": "'@{pipeline().parameters.reservationCode}'",
											"type": "Expression"
										},
										"operationType": {
											"value": "'@{pipeline().parameters.operationType}'",
											"type": "Expression"
										}
									},
									"datasetParameters": {
										"SourceNewRecord": {
											"folderPath": "@pipeline().parameters.processedFolderPath",
											"fileName": "@pipeline().parameters.processedFileName"
										},
										"SourceExistingHistorical": {
											"folderPath": "@pipeline().parameters.targetFolderPath",
											"fileName": "@pipeline().parameters.targetFileName"
										},
										"SinkTemp": {
											"folderPath": "@pipeline().parameters.tempFolderPath",
											"fileName": "@pipeline().parameters.tempFileName"
										}
									}
								},
								"compute": {
									"coreCount": 8,
									"computeType": "General"
								},
								"traceLevel": "Fine"
							}
						},
						{
							"name": "Copy Historical Temp To Final",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Append To Historical Log",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "ParquetSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": false,
										"enablePartitionDiscovery": false
									}
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "VFD_DS_Curated_Mida_Temp_Parquet",
									"type": "DatasetReference",
									"parameters": {
										"folderPath": "@pipeline().parameters.tempFolderPath",
										"fileName": "@pipeline().parameters.tempFileName"
									}
								}
							],
							"outputs": [
								{
									"referenceName": "VFD_DS_Curated_Mida_Historical_Parquet",
									"type": "DatasetReference",
									"parameters": {
										"folderPath": "@pipeline().parameters.targetFolderPath",
										"fileName": "@pipeline().parameters.targetFileName"
									}
								}
							]
						},
						{
							"name": "Delete Historical Temp File",
							"type": "Delete",
							"dependsOn": [
								{
									"activity": "Copy Historical Temp To Final",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "VFD_DS_Curated_Mida_Temp_Parquet",
									"type": "DatasetReference",
									"parameters": {
										"folderPath": "@pipeline().parameters.tempFolderPath",
										"fileName": "@pipeline().parameters.tempFileName"
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"reservationCode": {
				"type": "String",
				"defaultValue": "RVFDTEST001"
			},
			"operationType": {
				"type": "String",
				"defaultValue": "INSERT"
			},
			"processedFolderPath": {
				"type": "String",
				"defaultValue": "Mida/Bookings/Processed/2025/01"
			},
			"processedFileName": {
				"type": "String",
				"defaultValue": "VFD_Mida_Processed_20250101.parquet"
			},
			"targetFolderPath": {
				"type": "String",
				"defaultValue": "Mida/Bookings/Historical/2025/01"
			},
			"targetFileName": {
				"type": "String",
				"defaultValue": "VFD_Mida_Historical_20250101.parquet"
			},
			"tempFolderPath": {
				"type": "String",
				"defaultValue": "Mida/Bookings/Temp"
			},
			"tempFileName": {
				"type": "String",
				"defaultValue": "temp_append_historical.parquet"
			}
		},
		"folder": {
			"name": "Mida2/Bookings/Atomic"
		},
		"annotations": [
			"Pipeline atomica per append al log storico",
			"Append-only: non modifica mai record esistenti"
		]
	}
}