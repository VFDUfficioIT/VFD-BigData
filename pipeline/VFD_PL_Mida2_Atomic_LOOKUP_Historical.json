{
	"name": "VFD_PL_Mida2_Atomic_LOOKUP_Historical",
	"properties": {
		"description": "Pipeline atomica per cercare record nel file historical usando row_id",
		"activities": [
			{
				"name": "Lookup Historical Record",
				"type": "ExecuteDataFlow",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "VFD_DFL_Mida2_Atomic_LOOKUP_Historical",
						"type": "DataFlowReference",
						"parameters": {
							"row_id": {
								"value": "@concat('''', pipeline().parameters.row_id, '''')",
								"type": "Expression"
							}
						},
						"datasetParameters": {
							"SourceHistorical": {
								"folderPath": "@pipeline().parameters.sourceFolderPath",
								"fileName": "@pipeline().parameters.sourceFileName"
							},
							"SinkTemp": {
								"folderPath": "@pipeline().parameters.outputFolderPath",
								"fileName": "@pipeline().parameters.outputFileName"
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "Check If Record Found",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "Lookup Historical Record",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "VFD_DS_Curated_Mida_Temp_Parquet",
						"type": "DatasetReference",
						"parameters": {
							"folderPath": "@pipeline().parameters.outputFolderPath",
							"fileName": "@pipeline().parameters.outputFileName"
						}
					},
					"fieldList": [
						"exists",
						"size"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					}
				}
			},
			{
				"name": "Set Output Variable",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Check If Record Found",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "recordFound",
					"value": {
						"value": "@if(greater(activity('Check If Record Found').output.size, 0), true, false)",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"row_id": {
				"type": "string"
			},
			"sourceFolderPath": {
				"type": "string"
			},
			"sourceFileName": {
				"type": "string"
			},
			"outputFolderPath": {
				"type": "string"
			},
			"outputFileName": {
				"type": "string"
			}
		},
		"variables": {
			"recordFound": {
				"type": "Boolean",
				"defaultValue": false
			}
		},
		"folder": {
			"name": "Mida2/Bookings/Atomic"
		},
		"annotations": [
			"Pipeline per lookup in historical",
			"Cerca record per row_id e salva risultato in file temp",
			"Sintassi corretta per parametri dataflow"
		]
	}
}