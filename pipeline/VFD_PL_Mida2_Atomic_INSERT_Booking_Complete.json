{
	"name": "VFD_PL_Mida2_Atomic_INSERT_Booking_Complete",
	"properties": {
		"description": "@pipeline atomica per inserimento di una prenotazione nel file completo - riceve tutti i campi come parametri",
		"activities": [
			{
				"name": "Check Complete File Exists",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "VFD_DS_Curated_Mida_Bookings_Complete_Parquet",
						"type": "DatasetReference",
						"parameters": {
							"folderPath": "@pipeline().parameters.targetFolderPath",
							"fileName": "@pipeline().parameters.targetFileName"
						}
					},
					"fieldList": [
						"exists"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					}
				}
			},
			{
				"name": "If File Exists",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Check Complete File Exists",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@activity('Check Complete File Exists').output.exists",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Create New Complete File",
							"type": "ExecuteDataFlow",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataflow": {
									"referenceName": "VFD_DFL_Mida2_Atomic_CREATE_Booking_Complete",
									"type": "DataFlowReference",
									"parameters": {
										"guid_pk": {
											"value": "@concat('''', pipeline().parameters.guid_pk, '''')",
											"type": "Expression"
										},
										"reservation_progressiveCode": {
											"value": "@concat('''', pipeline().parameters.reservation_progressiveCode, '''')",
											"type": "Expression"
										},
										"reservation_code": {
											"value": "@concat('''', pipeline().parameters.reservation_code, '''')",
											"type": "Expression"
										},
										"reservation_status": {
											"value": "@pipeline().parameters.reservation_status",
											"type": "Expression"
										},
										"invoiceRequired": {
											"value": "@concat('''', pipeline().parameters.invoiceRequired, '''')",
											"type": "Expression"
										},
										"customer": {
											"value": "@pipeline().parameters.customer",
											"type": "Expression"
										},
										"visitDate": {
											"value": "@concat('''', pipeline().parameters.visitDate, '''')",
											"type": "Expression"
										},
										"reservationPayment_guid": {
											"value": "@concat('''', pipeline().parameters.reservationPayment_guid, '''')",
											"type": "Expression"
										},
										"parentPayment_guid": {
											"value": "@concat('''', pipeline().parameters.parentPayment_guid, '''')",
											"type": "Expression"
										},
										"sliced": {
											"value": "@concat('''', pipeline().parameters.sliced, '''')",
											"type": "Expression"
										},
										"reservation_guid": {
											"value": "@concat('''', pipeline().parameters.reservation_guid, '''')",
											"type": "Expression"
										},
										"group_guid": {
											"value": "@concat('''', pipeline().parameters.group_guid, '''')",
											"type": "Expression"
										},
										"group_label": {
											"value": "@concat('''', pipeline().parameters.group_label, '''')",
											"type": "Expression"
										},
										"group_email": {
											"value": "@concat('''', pipeline().parameters.group_email, '''')",
											"type": "Expression"
										},
										"paymentCode": {
											"value": "@concat('''', pipeline().parameters.paymentCode, '''')",
											"type": "Expression"
										},
										"paymentCondition": {
											"value": "@pipeline().parameters.paymentCondition",
											"type": "Expression"
										},
										"reservation_amount": {
											"value": "@pipeline().parameters.reservation_amount",
											"type": "Expression"
										},
										"reservation_amountTax": {
											"value": "@pipeline().parameters.reservation_amountTax",
											"type": "Expression"
										},
										"status": {
											"value": "@pipeline().parameters.status",
											"type": "Expression"
										},
										"status_text": {
											"value": "@concat('''', pipeline().parameters.status_text, '''')",
											"type": "Expression"
										},
										"stamp": {
											"value": "@concat('''', pipeline().parameters.stamp, '''')",
											"type": "Expression"
										},
										"notes": {
											"value": "@concat('''', pipeline().parameters.notes, '''')",
											"type": "Expression"
										},
										"transactionType": {
											"value": "@concat('''', pipeline().parameters.transactionType, '''')",
											"type": "Expression"
										},
										"transactionType_text": {
											"value": "@concat('''', pipeline().parameters.transactionType_text, '''')",
											"type": "Expression"
										},
										"paymentLimitDate": {
											"value": "@concat('''', pipeline().parameters.paymentLimitDate, '''')",
											"type": "Expression"
										},
										"paymentDate": {
											"value": "@concat('''', pipeline().parameters.paymentDate, '''')",
											"type": "Expression"
										},
										"refund": {
											"value": "@concat('''', pipeline().parameters.refund, '''')",
											"type": "Expression"
										},
										"refunded": {
											"value": "@concat('''', pipeline().parameters.refunded, '''')",
											"type": "Expression"
										},
										"convention_label": {
											"value": "@concat('''', pipeline().parameters.convention_label, '''')",
											"type": "Expression"
										},
										"receiptCode": {
											"value": "@concat('''', pipeline().parameters.receiptCode, '''')",
											"type": "Expression"
										},
										"insertTimestamp": {
											"value": "@concat('''', pipeline().parameters.insertTimestamp, '''')",
											"type": "Expression"
										},
										"updateTimestamp": {
											"value": "@concat('''', pipeline().parameters.updateTimestamp, '''')",
											"type": "Expression"
										},
										"owner": {
											"value": "@concat('''', pipeline().parameters.owner, '''')",
											"type": "Expression"
										},
										"owner_text": {
											"value": "@concat('''', pipeline().parameters.owner_text, '''')",
											"type": "Expression"
										},
										"sessionId": {
											"value": "@concat('''', pipeline().parameters.sessionId, '''')",
											"type": "Expression"
										},
										"terminal_label": {
											"value": "@concat('''', pipeline().parameters.terminal_label, '''')",
											"type": "Expression"
										},
										"terminalGroup_label": {
											"value": "@concat('''', pipeline().parameters.terminalGroup_label, '''')",
											"type": "Expression"
										},
										"gateway_guid": {
											"value": "@concat('''', pipeline().parameters.gateway_guid, '''')",
											"type": "Expression"
										},
										"gateway_label": {
											"value": "@concat('''', pipeline().parameters.gateway_label, '''')",
											"type": "Expression"
										},
										"transactionID": {
											"value": "@concat('''', pipeline().parameters.transactionID, '''')",
											"type": "Expression"
										},
										"bankAccount_guid": {
											"value": "@concat('''', pipeline().parameters.bankAccount_guid, '''')",
											"type": "Expression"
										},
										"bankAccount_label": {
											"value": "@concat('''', pipeline().parameters.bankAccount_label, '''')",
											"type": "Expression"
										},
										"channel_guid": {
											"value": "@concat('''', pipeline().parameters.channel_guid, '''')",
											"type": "Expression"
										},
										"channel_label": {
											"value": "@concat('''', pipeline().parameters.channel_label, '''')",
											"type": "Expression"
										},
										"channelType": {
											"value": "@concat('''', pipeline().parameters.channelType, '''')",
											"type": "Expression"
										},
										"detail_guid": {
											"value": "@concat('''', pipeline().parameters.detail_guid, '''')",
											"type": "Expression"
										},
										"extra_guid": {
											"value": "@concat('''', pipeline().parameters.extra_guid, '''')",
											"type": "Expression"
										},
										"priceList": {
											"value": "@concat('''', pipeline().parameters.priceList, '''')",
											"type": "Expression"
										},
										"event": {
											"value": "@concat('''', pipeline().parameters.event, '''')",
											"type": "Expression"
										},
										"detailType": {
											"value": "@concat('''', pipeline().parameters.detailType, '''')",
											"type": "Expression"
										},
										"detail_text": {
											"value": "@concat('''', pipeline().parameters.detail_text, '''')",
											"type": "Expression"
										},
										"detail_label": {
											"value": "@concat('''', pipeline().parameters.detail_label, '''')",
											"type": "Expression"
										},
										"detail_count": {
											"value": "@pipeline().parameters.detail_count",
											"type": "Expression"
										},
										"paymentDetail_guid": {
											"value": "@concat('''', pipeline().parameters.paymentDetail_guid, '''')",
											"type": "Expression"
										},
										"detail_payingPartecipants": {
											"value": "@pipeline().parameters.detail_payingPartecipants",
											"type": "Expression"
										},
										"detail_quantity": {
											"value": "@pipeline().parameters.detail_quantity",
											"type": "Expression"
										},
										"tickets_quantity": {
											"value": "@pipeline().parameters.tickets_quantity",
											"type": "Expression"
										},
										"pax_quantity": {
											"value": "@pipeline().parameters.pax_quantity",
											"type": "Expression"
										},
										"costCenter_guid": {
											"value": "@concat('''', pipeline().parameters.costCenter_guid, '''')",
											"type": "Expression"
										},
										"costCenter_label": {
											"value": "@concat('''', pipeline().parameters.costCenter_label, '''')",
											"type": "Expression"
										},
										"object_receipt": {
											"value": "@pipeline().parameters.object_receipt",
											"type": "Expression"
										},
										"object_taxCode": {
											"value": "@concat('''', pipeline().parameters.object_taxCode, '''')",
											"type": "Expression"
										},
										"object_taxNotes": {
											"value": "@concat('''', pipeline().parameters.object_taxNotes, '''')",
											"type": "Expression"
										},
										"object_amount": {
											"value": "@pipeline().parameters.object_amount",
											"type": "Expression"
										},
										"object_taxPercentage": {
											"value": "@pipeline().parameters.object_taxPercentage",
											"type": "Expression"
										},
										"amount": {
											"value": "@pipeline().parameters.amount",
											"type": "Expression"
										},
										"amountNet": {
											"value": "@pipeline().parameters.amountNet",
											"type": "Expression"
										},
										"amountPresale": {
											"value": "@pipeline().parameters.amountPresale",
											"type": "Expression"
										},
										"amountSold": {
											"value": "@pipeline().parameters.amountSold",
											"type": "Expression"
										},
										"amountPayed": {
											"value": "@pipeline().parameters.amountPayed",
											"type": "Expression"
										},
										"amountPending": {
											"value": "@pipeline().parameters.amountPending",
											"type": "Expression"
										},
										"amountCanceled": {
											"value": "@pipeline().parameters.amountCanceled",
											"type": "Expression"
										},
										"externalId": {
											"value": "@concat('''', pipeline().parameters.externalId, '''')",
											"type": "Expression"
										},
										"amountRefunded": {
											"value": "@pipeline().parameters.amountRefunded",
											"type": "Expression"
										},
										"invoiceSummary": {
											"value": "@concat('''', pipeline().parameters.invoiceSummary, '''')",
											"type": "Expression"
										},
										"eventCalendar_guid": {
											"value": "@concat('''', pipeline().parameters.eventCalendar_guid, '''')",
											"type": "Expression"
										},
										"passDetail_guid": {
											"value": "@concat('''', pipeline().parameters.passDetail_guid, '''')",
											"type": "Expression"
										},
										"paymentCostCenter_guid": {
											"value": "@concat('''', pipeline().parameters.paymentCostCenter_guid, '''')",
											"type": "Expression"
										},
										"organization_guid": {
											"value": "@concat('''', pipeline().parameters.organization_guid, '''')",
											"type": "Expression"
										},
										"venue_guid": {
											"value": "@concat('''', pipeline().parameters.venue_guid, '''')",
											"type": "Expression"
										},
										"olapUpdateTimestamp": {
											"value": "@concat('''', pipeline().parameters.olapUpdateTimestamp, '''')",
											"type": "Expression"
										},
										"row_id": {
											"value": "@concat('''', pipeline().parameters.row_id, '''')",
											"type": "Expression"
										}
									},
									"datasetParameters": {
										"SinkComplete": {
											"folderPath": "@pipeline().parameters.targetFolderPath",
											"fileName": "@pipeline().parameters.targetFileName"
										}
									}
								},
								"compute": {
									"coreCount": 8,
									"computeType": "General"
								},
								"traceLevel": "Fine"
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Append To Existing File",
							"type": "ExecuteDataFlow",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataflow": {
									"referenceName": "VFD_DFL_Mida2_Atomic_APPEND_Booking_Complete",
									"type": "DataFlowReference",
									"parameters": {
										"guid_pk": {
											"value": "@concat('''', pipeline().parameters.guid_pk, '''')",
											"type": "Expression"
										},
										"reservation_progressiveCode": {
											"value": "@concat('''', pipeline().parameters.reservation_progressiveCode, '''')",
											"type": "Expression"
										},
										"reservation_code": {
											"value": "@concat('''', pipeline().parameters.reservation_code, '''')",
											"type": "Expression"
										},
										"reservation_status": {
											"value": "@pipeline().parameters.reservation_status",
											"type": "Expression"
										},
										"invoiceRequired": {
											"value": "@concat('''', pipeline().parameters.invoiceRequired, '''')",
											"type": "Expression"
										},
										"customer": {
											"value": "@pipeline().parameters.customer",
											"type": "Expression"
										},
										"visitDate": {
											"value": "@concat('''', pipeline().parameters.visitDate, '''')",
											"type": "Expression"
										},
										"reservationPayment_guid": {
											"value": "@concat('''', pipeline().parameters.reservationPayment_guid, '''')",
											"type": "Expression"
										},
										"parentPayment_guid": {
											"value": "@concat('''', pipeline().parameters.parentPayment_guid, '''')",
											"type": "Expression"
										},
										"sliced": {
											"value": "@concat('''', pipeline().parameters.sliced, '''')",
											"type": "Expression"
										},
										"reservation_guid": {
											"value": "@concat('''', pipeline().parameters.reservation_guid, '''')",
											"type": "Expression"
										},
										"group_guid": {
											"value": "@concat('''', pipeline().parameters.group_guid, '''')",
											"type": "Expression"
										},
										"group_label": {
											"value": "@concat('''', pipeline().parameters.group_label, '''')",
											"type": "Expression"
										},
										"group_email": {
											"value": "@concat('''', pipeline().parameters.group_email, '''')",
											"type": "Expression"
										},
										"paymentCode": {
											"value": "@concat('''', pipeline().parameters.paymentCode, '''')",
											"type": "Expression"
										},
										"paymentCondition": {
											"value": "@pipeline().parameters.paymentCondition",
											"type": "Expression"
										},
										"reservation_amount": {
											"value": "@pipeline().parameters.reservation_amount",
											"type": "Expression"
										},
										"reservation_amountTax": {
											"value": "@pipeline().parameters.reservation_amountTax",
											"type": "Expression"
										},
										"status": {
											"value": "@pipeline().parameters.status",
											"type": "Expression"
										},
										"status_text": {
											"value": "@concat('''', pipeline().parameters.status_text, '''')",
											"type": "Expression"
										},
										"stamp": {
											"value": "@concat('''', pipeline().parameters.stamp, '''')",
											"type": "Expression"
										},
										"notes": {
											"value": "@concat('''', pipeline().parameters.notes, '''')",
											"type": "Expression"
										},
										"transactionType": {
											"value": "@concat('''', pipeline().parameters.transactionType, '''')",
											"type": "Expression"
										},
										"transactionType_text": {
											"value": "@concat('''', pipeline().parameters.transactionType_text, '''')",
											"type": "Expression"
										},
										"paymentLimitDate": {
											"value": "@concat('''', pipeline().parameters.paymentLimitDate, '''')",
											"type": "Expression"
										},
										"paymentDate": {
											"value": "@concat('''', pipeline().parameters.paymentDate, '''')",
											"type": "Expression"
										},
										"refund": {
											"value": "@concat('''', pipeline().parameters.refund, '''')",
											"type": "Expression"
										},
										"refunded": {
											"value": "@concat('''', pipeline().parameters.refunded, '''')",
											"type": "Expression"
										},
										"convention_label": {
											"value": "@concat('''', pipeline().parameters.convention_label, '''')",
											"type": "Expression"
										},
										"receiptCode": {
											"value": "@concat('''', pipeline().parameters.receiptCode, '''')",
											"type": "Expression"
										},
										"insertTimestamp": {
											"value": "@concat('''', pipeline().parameters.insertTimestamp, '''')",
											"type": "Expression"
										},
										"updateTimestamp": {
											"value": "@concat('''', pipeline().parameters.updateTimestamp, '''')",
											"type": "Expression"
										},
										"owner": {
											"value": "@concat('''', pipeline().parameters.owner, '''')",
											"type": "Expression"
										},
										"owner_text": {
											"value": "@concat('''', pipeline().parameters.owner_text, '''')",
											"type": "Expression"
										},
										"sessionId": {
											"value": "@concat('''', pipeline().parameters.sessionId, '''')",
											"type": "Expression"
										},
										"terminal_label": {
											"value": "@concat('''', pipeline().parameters.terminal_label, '''')",
											"type": "Expression"
										},
										"terminalGroup_label": {
											"value": "@concat('''', pipeline().parameters.terminalGroup_label, '''')",
											"type": "Expression"
										},
										"gateway_guid": {
											"value": "@concat('''', pipeline().parameters.gateway_guid, '''')",
											"type": "Expression"
										},
										"gateway_label": {
											"value": "@concat('''', pipeline().parameters.gateway_label, '''')",
											"type": "Expression"
										},
										"transactionID": {
											"value": "@concat('''', pipeline().parameters.transactionID, '''')",
											"type": "Expression"
										},
										"bankAccount_guid": {
											"value": "@concat('''', pipeline().parameters.bankAccount_guid, '''')",
											"type": "Expression"
										},
										"bankAccount_label": {
											"value": "@concat('''', pipeline().parameters.bankAccount_label, '''')",
											"type": "Expression"
										},
										"channel_guid": {
											"value": "@concat('''', pipeline().parameters.channel_guid, '''')",
											"type": "Expression"
										},
										"channel_label": {
											"value": "@concat('''', pipeline().parameters.channel_label, '''')",
											"type": "Expression"
										},
										"channelType": {
											"value": "@concat('''', pipeline().parameters.channelType, '''')",
											"type": "Expression"
										},
										"detail_guid": {
											"value": "@concat('''', pipeline().parameters.detail_guid, '''')",
											"type": "Expression"
										},
										"extra_guid": {
											"value": "@concat('''', pipeline().parameters.extra_guid, '''')",
											"type": "Expression"
										},
										"priceList": {
											"value": "@concat('''', pipeline().parameters.priceList, '''')",
											"type": "Expression"
										},
										"event": {
											"value": "@concat('''', pipeline().parameters.event, '''')",
											"type": "Expression"
										},
										"detailType": {
											"value": "@concat('''', pipeline().parameters.detailType, '''')",
											"type": "Expression"
										},
										"detail_text": {
											"value": "@concat('''', pipeline().parameters.detail_text, '''')",
											"type": "Expression"
										},
										"detail_label": {
											"value": "@concat('''', pipeline().parameters.detail_label, '''')",
											"type": "Expression"
										},
										"detail_count": {
											"value": "@pipeline().parameters.detail_count",
											"type": "Expression"
										},
										"paymentDetail_guid": {
											"value": "@concat('''', pipeline().parameters.paymentDetail_guid, '''')",
											"type": "Expression"
										},
										"detail_payingPartecipants": {
											"value": "@pipeline().parameters.detail_payingPartecipants",
											"type": "Expression"
										},
										"detail_quantity": {
											"value": "@pipeline().parameters.detail_quantity",
											"type": "Expression"
										},
										"tickets_quantity": {
											"value": "@pipeline().parameters.tickets_quantity",
											"type": "Expression"
										},
										"pax_quantity": {
											"value": "@pipeline().parameters.pax_quantity",
											"type": "Expression"
										},
										"costCenter_guid": {
											"value": "@concat('''', pipeline().parameters.costCenter_guid, '''')",
											"type": "Expression"
										},
										"costCenter_label": {
											"value": "@concat('''', pipeline().parameters.costCenter_label, '''')",
											"type": "Expression"
										},
										"object_receipt": {
											"value": "@pipeline().parameters.object_receipt",
											"type": "Expression"
										},
										"object_taxCode": {
											"value": "@concat('''', pipeline().parameters.object_taxCode, '''')",
											"type": "Expression"
										},
										"object_taxNotes": {
											"value": "@concat('''', pipeline().parameters.object_taxNotes, '''')",
											"type": "Expression"
										},
										"object_amount": {
											"value": "@pipeline().parameters.object_amount",
											"type": "Expression"
										},
										"object_taxPercentage": {
											"value": "@pipeline().parameters.object_taxPercentage",
											"type": "Expression"
										},
										"amount": {
											"value": "@pipeline().parameters.amount",
											"type": "Expression"
										},
										"amountNet": {
											"value": "@pipeline().parameters.amountNet",
											"type": "Expression"
										},
										"amountPresale": {
											"value": "@pipeline().parameters.amountPresale",
											"type": "Expression"
										},
										"amountSold": {
											"value": "@pipeline().parameters.amountSold",
											"type": "Expression"
										},
										"amountPayed": {
											"value": "@pipeline().parameters.amountPayed",
											"type": "Expression"
										},
										"amountPending": {
											"value": "@pipeline().parameters.amountPending",
											"type": "Expression"
										},
										"amountCanceled": {
											"value": "@pipeline().parameters.amountCanceled",
											"type": "Expression"
										},
										"externalId": {
											"value": "@concat('''', pipeline().parameters.externalId, '''')",
											"type": "Expression"
										},
										"amountRefunded": {
											"value": "@pipeline().parameters.amountRefunded",
											"type": "Expression"
										},
										"invoiceSummary": {
											"value": "@concat('''', pipeline().parameters.invoiceSummary, '''')",
											"type": "Expression"
										},
										"eventCalendar_guid": {
											"value": "@concat('''', pipeline().parameters.eventCalendar_guid, '''')",
											"type": "Expression"
										},
										"passDetail_guid": {
											"value": "@concat('''', pipeline().parameters.passDetail_guid, '''')",
											"type": "Expression"
										},
										"paymentCostCenter_guid": {
											"value": "@concat('''', pipeline().parameters.paymentCostCenter_guid, '''')",
											"type": "Expression"
										},
										"organization_guid": {
											"value": "@concat('''', pipeline().parameters.organization_guid, '''')",
											"type": "Expression"
										},
										"venue_guid": {
											"value": "@concat('''', pipeline().parameters.venue_guid, '''')",
											"type": "Expression"
										},
										"olapUpdateTimestamp": {
											"value": "@concat('''', pipeline().parameters.olapUpdateTimestamp, '''')",
											"type": "Expression"
										},
										"row_id": {
											"value": "@concat('''', pipeline().parameters.row_id, '''')",
											"type": "Expression"
										}
									},
									"datasetParameters": {
										"SourceExistingContent": {
											"folderPath": "@pipeline().parameters.targetFolderPath",
											"fileName": "@pipeline().parameters.targetFileName"
										},
										"SinkTemp": {
											"folderPath": "@pipeline().parameters.tempFolderPath",
											"fileName": "@pipeline().parameters.tempFileName"
										}
									}
								},
								"compute": {
									"coreCount": 8,
									"computeType": "General"
								},
								"traceLevel": "Fine"
							}
						},
						{
							"name": "Copy Temp To Final",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Append To Existing File",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "ParquetSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": false,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "ParquetReadSettings"
									}
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "VFD_DS_Curated_Mida_Temp_Parquet",
									"type": "DatasetReference",
									"parameters": {
										"folderPath": "@pipeline().parameters.tempFolderPath",
										"fileName": "@pipeline().parameters.tempFileName"
									}
								}
							],
							"outputs": [
								{
									"referenceName": "VFD_DS_Curated_Mida_Bookings_Complete_Parquet",
									"type": "DatasetReference",
									"parameters": {
										"folderPath": "@pipeline().parameters.targetFolderPath",
										"fileName": "@pipeline().parameters.targetFileName"
									}
								}
							]
						},
						{
							"name": "Delete Temp File",
							"type": "Delete",
							"dependsOn": [
								{
									"activity": "Copy Temp To Final",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "VFD_DS_Curated_Mida_Temp_Parquet",
									"type": "DatasetReference",
									"parameters": {
										"folderPath": "@pipeline().parameters.tempFolderPath",
										"fileName": "@pipeline().parameters.tempFileName"
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"guid_pk": {
				"type": "string"
			},
			"reservation_progressiveCode": {
				"type": "string"
			},
			"reservation_code": {
				"type": "string"
			},
			"reservation_status": {
				"type": "int"
			},
			"invoiceRequired": {
				"type": "string"
			},
			"customer": {
				"type": "float"
			},
			"visitDate": {
				"type": "string"
			},
			"reservationPayment_guid": {
				"type": "string"
			},
			"parentPayment_guid": {
				"type": "string"
			},
			"sliced": {
				"type": "string"
			},
			"reservation_guid": {
				"type": "string"
			},
			"group_guid": {
				"type": "string"
			},
			"group_label": {
				"type": "string"
			},
			"group_email": {
				"type": "string"
			},
			"paymentCode": {
				"type": "string"
			},
			"paymentCondition": {
				"type": "float"
			},
			"reservation_amount": {
				"type": "float"
			},
			"reservation_amountTax": {
				"type": "float"
			},
			"status": {
				"type": "int"
			},
			"status_text": {
				"type": "string"
			},
			"stamp": {
				"type": "string"
			},
			"notes": {
				"type": "string"
			},
			"transactionType": {
				"type": "string"
			},
			"transactionType_text": {
				"type": "string"
			},
			"paymentLimitDate": {
				"type": "string"
			},
			"paymentDate": {
				"type": "string"
			},
			"refund": {
				"type": "string"
			},
			"refunded": {
				"type": "string"
			},
			"convention_label": {
				"type": "string"
			},
			"receiptCode": {
				"type": "string"
			},
			"insertTimestamp": {
				"type": "string"
			},
			"updateTimestamp": {
				"type": "string"
			},
			"owner": {
				"type": "string"
			},
			"owner_text": {
				"type": "string"
			},
			"sessionId": {
				"type": "string"
			},
			"terminal_label": {
				"type": "string"
			},
			"terminalGroup_label": {
				"type": "string"
			},
			"gateway_guid": {
				"type": "string"
			},
			"gateway_label": {
				"type": "string"
			},
			"transactionID": {
				"type": "string"
			},
			"bankAccount_guid": {
				"type": "string"
			},
			"bankAccount_label": {
				"type": "string"
			},
			"channel_guid": {
				"type": "string"
			},
			"channel_label": {
				"type": "string"
			},
			"channelType": {
				"type": "string"
			},
			"detail_guid": {
				"type": "string"
			},
			"extra_guid": {
				"type": "string"
			},
			"priceList": {
				"type": "string"
			},
			"event": {
				"type": "string"
			},
			"detailType": {
				"type": "string"
			},
			"detail_text": {
				"type": "string"
			},
			"detail_label": {
				"type": "string"
			},
			"detail_count": {
				"type": "int"
			},
			"paymentDetail_guid": {
				"type": "string"
			},
			"detail_payingPartecipants": {
				"type": "int"
			},
			"detail_quantity": {
				"type": "int"
			},
			"tickets_quantity": {
				"type": "int"
			},
			"pax_quantity": {
				"type": "int"
			},
			"costCenter_guid": {
				"type": "string"
			},
			"costCenter_label": {
				"type": "string"
			},
			"object_receipt": {
				"type": "int"
			},
			"object_taxCode": {
				"type": "string"
			},
			"object_taxNotes": {
				"type": "string"
			},
			"object_amount": {
				"type": "float"
			},
			"object_taxPercentage": {
				"type": "float"
			},
			"amount": {
				"type": "float"
			},
			"amountNet": {
				"type": "float"
			},
			"amountPresale": {
				"type": "float"
			},
			"amountSold": {
				"type": "float"
			},
			"amountPayed": {
				"type": "float"
			},
			"amountPending": {
				"type": "float"
			},
			"amountCanceled": {
				"type": "float"
			},
			"externalId": {
				"type": "string"
			},
			"amountRefunded": {
				"type": "float"
			},
			"invoiceSummary": {
				"type": "string"
			},
			"eventCalendar_guid": {
				"type": "string"
			},
			"passDetail_guid": {
				"type": "string"
			},
			"paymentCostCenter_guid": {
				"type": "string"
			},
			"organization_guid": {
				"type": "string"
			},
			"venue_guid": {
				"type": "string"
			},
			"olapUpdateTimestamp": {
				"type": "string"
			},
			"row_id": {
				"type": "string"
			},
			"targetFolderPath": {
				"type": "string"
			},
			"targetFileName": {
				"type": "string"
			},
			"tempFolderPath": {
				"type": "string"
			},
			"tempFileName": {
				"type": "string"
			}
		},
		"folder": {
			"name": "Mida2/Bookings/Atomic"
		},
		"annotations": [
			"@pipeline atomica per inserimento prenotazioni complete",
			"Sintassi corretta e uniforme per entrambi i dataflow CREATE e APPEND"
		]
	}
}